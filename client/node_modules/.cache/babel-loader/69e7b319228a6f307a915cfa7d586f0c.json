{"remainingRequest":"C:\\Users\\Administrator\\Desktop\\node-app\\client\\node_modules\\babel-loader\\lib\\index.js!C:\\Users\\Administrator\\Desktop\\node-app\\client\\node_modules\\eslint-loader\\index.js??ref--13-0!C:\\Users\\Administrator\\Desktop\\node-app\\client\\src\\http.js","dependencies":[{"path":"C:\\Users\\Administrator\\Desktop\\node-app\\client\\src\\http.js","mtime":1552612592775},{"path":"C:\\Users\\Administrator\\Desktop\\node-app\\client\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\Administrator\\Desktop\\node-app\\client\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000},{"path":"C:\\Users\\Administrator\\Desktop\\node-app\\client\\node_modules\\eslint-loader\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["import _Promise from \"C:\\\\Users\\\\Administrator\\\\Desktop\\\\node-app\\\\client\\\\node_modules\\\\@babel\\\\runtime-corejs2/core-js/promise\";\nimport \"core-js/modules/es6.array.iterator\";\nimport \"core-js/modules/es6.promise\";\nimport \"core-js/modules/es6.object.assign\";\nimport \"core-js/modules/es7.promise.finally\";\nimport axios from 'axios';\nimport { Message, Loading } from 'element-ui';\nimport router from './router';\nvar loading; //定义loading变量\n\nfunction startLoading() {\n  loading = Loading.service({\n    lock: true,\n    text: '加载中...',\n    background: 'rgba(0,0,0,0.7)'\n  });\n}\n\nfunction endLoading() {\n  loading.close();\n} // 请求拦截  设置统一header\n\n\naxios.interceptors.request.use(function (config) {\n  //加载\n  startLoading();\n\n  if (localStorage.eleToken) {\n    config.headers.Authorization = localStorage.eleToken;\n  }\n\n  return config;\n}, function (error) {\n  return _Promise.reject(error);\n}); // 响应拦截  401 token过期处理\n\naxios.interceptors.response.use(function (response) {\n  endLoading();\n  return response;\n}, function (error) {\n  endLoading();\n  Message.error(error.response.data);\n\n  if (status == 401) {\n    Message.error('token值无效，请重新登录'); // 清除token\n\n    localStorage.removeItem('eleToken'); // 页面跳转\n\n    router.push('/login');\n  }\n\n  return _Promise.reject(error);\n});\nexport default axios;",{"version":3,"sources":["C:\\Users\\Administrator\\Desktop\\node-app\\client\\src\\http.js"],"names":["axios","Message","Loading","router","loading","startLoading","service","lock","text","background","endLoading","close","interceptors","request","use","config","localStorage","eleToken","headers","Authorization","error","reject","response","data","status","removeItem","push"],"mappings":";;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SACIC,OADJ,EAEIC,OAFJ,QAGO,YAHP;AAIA,OAAOC,MAAP,MAAmB,UAAnB;AAEA,IAAIC,OAAJ,C,CAAY;;AAEZ,SAASC,YAAT,GAAwB;AACpBD,EAAAA,OAAO,GAAGF,OAAO,CAACI,OAAR,CAAgB;AACtBC,IAAAA,IAAI,EAAE,IADgB;AAEtBC,IAAAA,IAAI,EAAE,QAFgB;AAGtBC,IAAAA,UAAU,EAAE;AAHU,GAAhB,CAAV;AAKH;;AAED,SAASC,UAAT,GAAsB;AAClBN,EAAAA,OAAO,CAACO,KAAR;AACH,C,CAED;;;AACAX,KAAK,CAACY,YAAN,CAAmBC,OAAnB,CAA2BC,GAA3B,CAA+B,UAACC,MAAD,EAAY;AACvC;AACAV,EAAAA,YAAY;;AACZ,MAAIW,YAAY,CAACC,QAAjB,EAA2B;AACvBF,IAAAA,MAAM,CAACG,OAAP,CAAeC,aAAf,GAA+BH,YAAY,CAACC,QAA5C;AACH;;AACD,SAAOF,MAAP;AACH,CAPD,EAOG,UAAAK,KAAK,EAAI;AACR,SAAO,SAAQC,MAAR,CAAeD,KAAf,CAAP;AACH,CATD,E,CAWA;;AACApB,KAAK,CAACY,YAAN,CAAmBU,QAAnB,CAA4BR,GAA5B,CAAgC,UAACQ,QAAD,EAAc;AAC1CZ,EAAAA,UAAU;AACV,SAAOY,QAAP;AACH,CAHD,EAGG,UAAAF,KAAK,EAAI;AACRV,EAAAA,UAAU;AACVT,EAAAA,OAAO,CAACmB,KAAR,CAAcA,KAAK,CAACE,QAAN,CAAeC,IAA7B;;AACA,MAAIC,MAAM,IAAI,GAAd,EAAmB;AACfvB,IAAAA,OAAO,CAACmB,KAAR,CAAc,gBAAd,EADe,CAEf;;AACAJ,IAAAA,YAAY,CAACS,UAAb,CAAwB,UAAxB,EAHe,CAIf;;AACAtB,IAAAA,MAAM,CAACuB,IAAP,CAAY,QAAZ;AACH;;AACD,SAAO,SAAQL,MAAR,CAAeD,KAAf,CAAP;AACH,CAdD;AAgBA,eAAepB,KAAf","sourcesContent":["import axios from 'axios'\r\nimport {\r\n    Message,\r\n    Loading\r\n} from 'element-ui'\r\nimport router from './router'\r\n\r\nlet loading //定义loading变量\r\n\r\nfunction startLoading() {\r\n    loading = Loading.service({\r\n        lock: true,\r\n        text: '加载中...',\r\n        background: 'rgba(0,0,0,0.7)'\r\n    })\r\n}\r\n\r\nfunction endLoading() {\r\n    loading.close();\r\n}\r\n\r\n// 请求拦截  设置统一header\r\naxios.interceptors.request.use((config) => {\r\n    //加载\r\n    startLoading();\r\n    if (localStorage.eleToken) {\r\n        config.headers.Authorization = localStorage.eleToken\r\n    }\r\n    return config\r\n}, error => {\r\n    return Promise.reject(error)\r\n})\r\n\r\n// 响应拦截  401 token过期处理\r\naxios.interceptors.response.use((response) => {\r\n    endLoading()\r\n    return response\r\n}, error => {\r\n    endLoading();\r\n    Message.error(error.response.data);\r\n    if (status == 401) {\r\n        Message.error('token值无效，请重新登录')\r\n        // 清除token\r\n        localStorage.removeItem('eleToken')\r\n        // 页面跳转\r\n        router.push('/login')\r\n    }\r\n    return Promise.reject(error)\r\n})\r\n\r\nexport default axios"]}]}